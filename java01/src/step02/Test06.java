/*변수 선언: 배열 변수*/
package step02;

public class Test06 {

  public static void main(String[] args) {
    //1) 배열 레퍼런스 변수 선언
   byte[] arr1; //자바 언어에서 주로 사용하는 스타일
   //byte arr1[]; 과 같음(C언어에서 주로 사용하는 스타일도 지원)
   
   // => byte[] arr1
   //-byte 배열의 주소를 저장할 변수를 선언함
   //'레퍼런스 변수' (='레퍼런스')
   //일반적인 값을 저장할 수 없음.
   //arr1 = 10; //컴파일 오류
  //arr1[0] = 10; //아직 arr1변수의 값을 초기화 시키지 않았기 때문에 컴파일 오류!
   //<주의!!!!>
   //자바에서 모든 종류의 변수 값을 초기화시키지 않고 사용하게 되면 컴파일 오류 발생
   
   arr1 = null; //arr1에 0값을 저장 = 즉 주소가 없음을 의미
   //arr1에 명확하게 값을 초기화 시켰지만, 그 값은 주소가 없음을 의미.
   //arr1[0] = 10; //null로 초기화시켰다 하더라도 일단 변수의 값은 초기화된 것이기 때문에
   //컴파일 오류는 발생하지 않음. 
   //다만 실행할 때 arr1 변수에 주소가 없기 때문에 실행 오류가 발생한다.
   //실행 오류(Runtime Exception) 발생!
   
   
   //2) 배열을 생성하여 그 주소를 레퍼런스에 담기
   arr1 = new byte[3];   
   //설명
   //=> new byte[3] -> byte 타입의 메모리를 연속하여 3개 준비한다.
   //그리고 시작 메모리의 주소를 리턴함.
    
   
   //3) 배열에 값 담기.
  arr1[0] = 10;
  arr1[1] = 20;
  arr1[2] = 30; 
  
  System.out.printf("%d, %d , %d\n", arr1[0], arr1[1], arr1[2]);
  
  arr1[3] = 40;
  //존재하지 않는 메모리의 인덱스를 가리키더라도 컴파일 오류 발생하지 않음.
  //그러나 실행할 때 그 인덱스에 해당하는 메모리가 없기 때문에 실행오류 발생
  }
}

/* 배열 변수
 *  => 같은 타입의 메모리를 연속적으로 만들 때 사용하는 문법
 * 
 */